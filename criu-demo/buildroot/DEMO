This HOWTO describes how to dump a trivial program.

####################################
	Prepare
####################################

Let's create a shell script which loops and reports time every second:

 $ cat > test.sh <<-EOF
 #!/bin/sh
 while :; do
     sleep 1
     date
 done
 EOF
 $ chmod +x test.sh

####################################
	Run (isolated)
####################################

Now, if you try to simply run and try to dump such a program, CRIU will fail.
The reason is a program you launch from the shell shares some common resources
with the shell, notably its session and terminal. CRIU has a built-in check
that makes sure there are no such resources.

To remove the dependency on a current terminal, let's executed our script in a
new session and redirect its output to a file:

 $ setsid ./test.sh  < /dev/null &> test.log &
 [2] 2220
 [2]+  Done   setsid ./test.sh < /dev/null &>test.log

####################################
	Dump
####################################

Get the PID of the test process:

 $  ps -C test.sh
  PID TTY          TIME CMD
 2221 ?        00:00:00 test.sh

Dump it:

 # criu dump -t 2221 -vvv -o dump.log && echo OK
 OK

####################################
	Check dump files
####################################

The state of the process(es) is saved to a few files:

$  ls
core-2221.img   eventpoll-tfd.img  filelocks-2221.img
core-2424.img   fanotify.img       filelocks-2424.img
creds-2221.img  fanotify-mark.img  fs-2221.img      
creds-2424.img  fdinfo-2.img       fs-2424.img     

####################################
	Restore
####################################

Restore the test process:

 # criu restore -d -vvv -o restore.log && echo OK
 OK

####################################
	A shell job
####################################

Now let's see how to dump the same program when it is just started from the
shell without any additional setsid and stdio redirection.  For that we need to
execute our test script or another program (e.g. "top") from a terminal without
any redirection.

NOTE: CRIU only supports Unix98 PTYs.

####################################
	Run
####################################

 $ ./test.sh
 $ ps -C test.sh
   PID TTY          TIME CMD
  2621 pts/1    00:00:00 test.sh

####################################
	Dump
####################################

Currently CRIU doesn't support a stopped task, so "criu dump" must be executed
from another terminal.

 # criu dump -t 2621
 (00.012929) Error (tty.c:1022): tty: Found dangling tty with sid 940 pgid 2621
(pts) on peer fd 0. Consider using --shell-job option.
 (00.013111) Error (cr-dump.c:1636): Dumping FAILED.

See, CRIU asks to set the <code>--shell-job</code>, because we try to dump only
a part of a session and a slave end of a tty pair. It is a common rule to ask a
user, if only a part of something is dumped.

 # criu dump -vvvv -o dump.log -t 2621 --shell-job && echo OK
 OK

####################################
	Restore
####################################

 #  criu restore -vvvv -o restore.log --shell-job
 Fri Apr 12 12:41:09 MSK 2013
 Fri Apr 12 12:41:10 MSK 2013
