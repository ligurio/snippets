#!/usr/bin/env python

"""
gprof:
  - https://sourceware.org/binutils/docs/gprof/
  - ./hello_world
  - gprof ./hello_world

perf:
  - https://perf.wiki.kernel.org/index.php/Main_Page

valgrind:
  - http://valgrind.org/docs/manual/cl-manual.html

convert coverage data to map func:test

"""

import glob
import sys

from subprocess import Popen, PIPE, STDOUT

GPROF_OPT = "gprof"
GPROF_PATTERN = "gmon.out"

PERF_RECORD_OPT = "perf record -g --"
PERF_SCRIPT_OPT = "perf script"
PERF_PATTERN = "perf.data"
# perf script | c++filt

VALGRIND_OPT = "valgrind --tool=callgrind --dump-instr=yes --collect-jumps=yes"
VALGRIND_PATTERN = "callgrind.out.*"

# TODO: check tool and exit if it is absent

del sys.argv[0]
print "Run with options:", sys.argv

cmd = VALGRIND_OPT.split(" ")
proc = Popen(cmd + sys.argv, stdout=PIPE, stderr=PIPE)

#for line in iter(proc.stdout.readline, ''):
#    print line

proc.stdout.close()
rc = proc.wait()
# TODO: handle exit code

print glob.glob(CALLGRIND_PATTERN)

# TODO: parse output
