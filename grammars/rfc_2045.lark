##
## MIME, RFC 2045
##

# add later a common mime table also as an option to this 
mime = RFC-2045.mime

RFC-2045 {

  mime = (type "/" subtype | iana.any) ("" | (";" parameter)*)

  ## below from spec

  attribute = token

  composite-type = "message" | "multipart" | extension-token

  ct = "Content-Type" | "content-TYPE" | "content-type"

  content = ct ":" type "/" subtype (";" parameter)*

  description = "Content-Description" ":" RFC-822.text*

  discrete-type = "text" | "image" | "audio" | "video" |
                   "application" | extension-token

  encoding = "Content-Transfer-Encoding" ":" mechanism

  CRLF = 13 10

  entity-headers = ("" | content CRLF )
                   ("" | encoding CRLF )
                   ("" | id CRLF )
                   ("" | description CRLF )
                   ( MIME-extension-field CRLF )*

  extension-token = ietf-token | x-token

  hex-octet = "=" (RFC-822.DIGIT | "A" | "B" | "C" | "D" | "E" | "F"){2,2}

  iana-token = "IAMNOTATOKEN"

   #<A publicly-defined extension token. Tokens
   #of this form must be registered with IANA
   #as specified in RFC 2048.>

  ietf-token = "IAMNOTANIETFTOKEN"
   #<An extension token defined by a
   #standards-track RFC and registered
   #with IANA.>

  id = "Content-ID" ":" RFC-822.msg-id

  mechanism = "7bit" | "8bit" | "binary" |
               "quoted-printable" | "base64" |
               ietf-token | x-token

  MIME-extension-field = "Content-" "foo"
                             #<Any RFC 822 header field which begins with the string "Content-">

  MIME-message-headers = entity-headers RFC-822.fields version CRLF

  MIME-part-headers = entity-headers
                       ("" | RFC-822.fields)

  parameter = attribute "=" value

  ptext = hex-octet | safe-char

  qp-line = (qp-segment transport-padding CRLF)*
             qp-part transport-padding

  qp-part = qp-section # Maximum length of 76 characters

  qp-section = ("" | (ptext | RFC-822.SPACE | RFC-822.HTAB)* ptext)

  qp-segment = qp-section (RFC-822.SPACE | RFC-822.HTAB)* "=" # Maximum length of 76 characters

  quoted-printable = qp-line (CRLF qp-line)*

  safe-char = ["-<>-~] # <any octet with decimal value of 33 through 60 inclusive, and 62 through 126>

  subtype = extension-token | iana-token

  token = [a-z]+ # FIXME: 1*<any (US-ASCII) CHAR except SPACE, CTLs, or tspecials>

  transport-padding = RFC-822.LWSP-char*

  tspecials =  "(" | ")" | "<" | ">" | "@" |
               "," | ";" | ":" | "\\" | "\"" |
               "/" | "[" | "]" | "?" | "="
               # Must be in quoted-string, to use within parameter values

  type = discrete-type | composite-type

  value = token | RFC-822.quoted-string

  version = "MIME-Version" ":" RFC-822.DIGIT+ "." RFC-822.DIGIT+

  x-token = ("X-" | "x-") token 

  # type = "text"
  # subtype = "plain"
  # attribute = "foo"
  # value = "bar"
}
