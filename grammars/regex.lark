regex {
   posix {
      # plain POSIX (ERE), add more extended ones later
      rex = letter 
          | ( range
            | rex repetition
            | rex "|" rex
            | ( "(" rex ")" | "\\" num.dec)
            | "\\" ("w" | "W" | "<" | ">" | "b" | "B" | "`" | "'" | "r" | "n")
            | "(" rex+ ")" )

      repetition
         = "*" | "+" | "?"
         | "{" num.natural "}"
         | "{" num.natural "," "}"
         | "{" "," num.natural"}"
         | "{" num.natural "," num.natural "}"

      range = "[" ("^" | "") range-elt* ("" | "$") "]"

      letter = [0-9a-z]

      named-range-elt = "[:alnum:]" | "[:alpha:]" | "[:cntrl:]" | "[:digit:]" | "[:graph:]" | "[:lower:]" | "[:print:]" | "[:punct:]" | "[:space:]" | "[:upper:]" | "[:xdigit:]"

      range-elt
         = named-range-elt
         | letter
         | letter "-" letter


      regex = rex{1,20}
   }

   js { # <- bad name, but not sure what standard this one is based on

      letter = [0-9a-zA-Z]

      control-char = letter | "~" | "!" | "M" | "m" | "a"

      rex
         = letter | letter | letter | letter | letter | letter
         | rex+
         | range
         | rex repetition
         | rex "|" rex
         | "(" rex ")"     # capturing
         | "(?:" rex ")"   # non-capturing
         | "(?=" rex ")"   # lookahead
         | "(?!" rex ")"   # lookahead
         | "\\" num.dec
         | "\\" ("f" | "r" | "n" | "t" | "v" | "0" | "s" | "S" | "w" | "W" | "d" | "D" | "b" | "B")
         | "\\" ("[b]" | "c" control-char | "x" num.hex num.hex | "u" num.hex num.hex num.hex num.hex)
         | "(" rex+ ")"


      repetition
         = "*" | "+" | "?"
         | "{" num.natural "}"
         | "{" num.natural "," "}"
         | "{" "," num.natural"}"
         # keep order
         | "{" [0-5] "," [5-9] "}"
         | "{" [0-5] num.dec {1} "," [5-9] num.dec{0,1} "}"
         | "{" [0-5] num.dec {2} "," [5-9] num.dec{0,2} "}"
         | "{" [0-5] num.dec {4} "," [5-9] num.dec{0,4} "}"
         | "{" [0-5] num.dec {8} "," [5-9] num.dec{0,8} "}"
         | "{" [0-5] num.dec {32} "," [5-9] num.dec{0,32} "}"
         | "{" [0-5] num.dec {128} "," [5-9] num.dec{0,128} "}"

      range = "[" ("^" | "") range-elt* ("" | "$") "]"

      range-elt
         = named-range-elt
         | letter
         | [0-9] "-" [a-zA-Z] # has to be ordered

      named-range-elt = "[:alnum:]" | "[:alpha:]" | "[:cntrl:]" | "[:digit:]" | "[:graph:]" | "[:lower:]" | "[:print:]" | "[:punct:]" | "[:space:]" | "[:upper:]" | "[:xdigit:]"

      regex = "/" rex{1,10} "/"
   }

   regex = posix.regex | js.regex
}
